# PipelineRun with Pipelines as Code annotations
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: ci-pipeline-run-pac
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/version: "1.0.0"
  annotations:
    # Pipelines as Code annotations for GitHub integration
    pipelinesascode.tekton.dev/on-event: "[push, pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "[main, master]"
    pipelinesascode.tekton.dev/on-source-branch: "[main, master, feature/*]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
    pipelinesascode.tekton.dev/task-timeout: "20m"
    pipelinesascode.tekton.dev/pipeline-timeout: "30m"

    # Git status reporting
    tekton.dev/git-status: "true"

    # Optional: Custom annotations for better organization
    description: "CI/CD pipeline for wudi application with Pipelines as Code"
    version: "1.0.0"
spec:
  pipelineRef:
    name: ci-pipeline

  # Parameters with dynamic values from Pipelines as Code
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: git-revision
      value: "{{ revision }}"
    - name: app-name
      value: "wudi-app"
    - name: app-version
      value: "{{ revision }}"
    - name: image-registry
      value: "uhub.service.ucloud.cn/base-images"
    - name: image-repository
      value: "wudi-app"
    - name: image-tag
      value: "{{ revision }}"
    - name: dockerfile-path
      value: "./Dockerfile"
    - name: context-path
      value: "."

  # Optimized workspaces with smaller storage requests
  workspaces:
    - name: shared-data
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi  # Reduced from default 5Gi
          storageClassName: standard  # Use appropriate storage class

    - name: docker-credentials
      secret:
        secretName: docker-credentials
        optional: true

    - name: git-credentials
      secret:
        secretName: git-credentials-secret
        optional: true

  # Resource-aware task run specifications (optimized for minimal resources)
  taskRunSpecs:
    - pipelineTaskName: git-clone
      taskServiceAccountName: pipeline-sa
      computeResources:
        requests:
          memory: "64Mi"   # Minimal memory for git clone
          cpu: "50m"       # Minimal CPU for git clone
        limits:
          memory: "128Mi"
          cpu: "100m"

    - pipelineTaskName: build-and-push
      taskServiceAccountName: pipeline-sa
      computeResources:
        requests:
          memory: "256Mi"  # Reduced memory for kaniko
          cpu: "100m"      # Reduced CPU for kaniko
        limits:
          memory: "1Gi"    # Reduced memory limit
          cpu: "500m"      # Reduced CPU limit

  # Aggressive timeouts for faster feedback
  timeouts:
    pipeline: "30m"
    tasks: "20m"
    finally: "5m"

  # Security context
  podTemplate:
    securityContext:
      runAsNonRoot: true
      runAsUser: 65532
      fsGroup: 65532
